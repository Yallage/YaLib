plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'com.rabbitown'
version '1.0.0-alpha.25'

repositories {
    mavenCentral()
    maven { url 'https://maven.aliyun.com/repository/public'}

    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
    maven { url 'https://repo.codemc.org/repository/maven-public' }
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    implementation 'io.netty:netty-all:4.1.58.Final'
    shadow 'io.github.bananapuncher714:nbteditor:7.16.1' // TODO: scheduled to be removed.
    shadow 'org.ow2.asm:asm:9.1'

    implementation fileTree('libs')

    shadow 'org.jetbrains.kotlin:kotlin-stdlib'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.google.code.findbugs:annotations:3.0.1'
}

idea {
    module {
        downloadSources = true
    }
}

compileJava {
    options.compilerArgs << '-parameters'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml' expand 'version': project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url = project.properties.repo_address
            credentials {
                username project.properties.repo_username as String
                password project.properties.repo_password as String
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}